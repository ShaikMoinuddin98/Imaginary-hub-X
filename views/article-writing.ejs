<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
<!-- Google ad tag -->
<meta name="google-adsense-account" content="ca-pub-6290396655730555">
  <title>Article Writing Page</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<link
    href="/assests/svg/IH X.png"
    rel="shortcut icon" type="image/x-icon" />
<link
    href="/assests/svg/IH X.png"
    rel="apple-touch-icon" />
  <style>
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px;
    }

    .title-section,
    .article-section {
      padding: 20px;
      margin-bottom: 20px;
      position: relative;
    }

    .title-section input {
      font-size: 2rem;
      font-weight: bold;
      border: none;
    }

    .plus-button {
      cursor: pointer;
      display: inline-block;
      position: absolute;
      top: 10px;
      right: 10px;
      padding: 10px;
      background-color: #007bff;
      color: white;
    }

    .sidebar {
      display: none;
      position: fixed;
      top: 0;
      right: 0;
      width: 250px;
      height: 100%;
      background: #f8f9fa;
      border-left: 1px solid #ddd;
      padding: 20px;
      z-index: 1000;
    }

    .sidebar.active {
      display: block;
    }

    .selected {
      background-color: #007bff;
      color: white;
    }

    img.draggable {
      cursor: move;
      max-width: 100%;
      height: auto;
    }

    .draggable {
      resize: both;
      overflow: hidden;
      position: relative;
      display: inline-block;
      margin: 10px;
    }

    .draggable .delete-btn {
      position: absolute;
      top: 5px;
      right: 5px;
      background-color: red;
      color: white;
      border: none;
      border-radius: 50%;
      cursor: pointer;
    }

    .footer {
      margin-top: 20px;
    }

    .image-preview {
      position: relative;
      display: inline-block;
      margin: 10px;
      width: 30%;
    }

    /* Adjusted width to 30% */
    .image-preview img {
      max-width: 100%;
      height: auto;
    }

    /* Ensure the image fills the container */
    .delete-image {
      position: absolute;
      top: 0;
      right: 0;
      background-color: red;
      color: white;
      border: none;
      border-radius: 50%;
      cursor: pointer;
    }
  </style>
</head>
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-7QXPMYT3BK"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-7QXPMYT3BK');
</script>
<body>

  <!-- Header Section -->
  <div class="header bg-light">
    <div class="logo">
      <h3><a href="/views/index.html" style="text-decoration: none; color: black;">Imaginary Hub X</a></h3>
    </div>
    <div class="actions">
      <button class="btn btn-primary" id="scheduleBtn">Schedule</button>
      <button class="btn btn-success" id="publishBtn">Publish</button>
    </div>
  </div>

  <!-- Main Body -->
  <div class="container">
    <!-- Title Section -->
    <div class="title-section">
      <input type="text" class="form-control" placeholder="Title" id="titleInput">
    </div>

    <!-- Article Section -->
    <div class="article-section">
      <div id="articleInput" contenteditable="true" class="form-control" style="min-height: 400px; overflow-y: auto;">
      </div>
      <button class="btn btn-primary plus-button" id="articlePlus">+</button>
    </div>

    <!-- Image Upload Section at the End -->
    <div class="footer">
      <h5>Add relevant images to this article:</h5>
      <input type="file" id="imageUpload" accept="image/*">
      <div id="imagePreview"></div>
    </div>

    <!-- Category Selection -->
   <div class="footer">
  <h5>Select a category for this article:</h5>
  <select class="form-control" id="categorySelect">
    <option value="Business">Business</option>
    <option value="Tech">Tech</option>
    <option value="Education">Education</option>
    <option value="Psychology">Human Psychology</option>
    <option value="Finance">Finance</option>
    <option value="Design & Art">Design & Art</option>
  </select>
</div>

  <!-- Sidebar Menu -->
  <div class="sidebar" id="sidebar">
    <span class="close-sidebar">X</span>
    <h5>Format Options</h5>
    <button class="btn btn-outline-secondary w-100 mb-2" id="boldBtn">Bold</button>
    <button class="btn btn-outline-secondary w-100 mb-2" id="italicBtn">Italic</button>
    <button class="btn btn-outline-secondary w-100 mb-2" id="addLinkBtn">Add Hyperlink</button>
    <button class="btn btn-outline-secondary w-100 mb-2" id="normalBtn">Normal</button>
  </div>

  <!-- Schedule Modal -->
  <div class="modal fade" id="scheduleModal" tabindex="-1" aria-labelledby="scheduleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="scheduleModalLabel">Schedule Article</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <label for="scheduleDate" class="form-label">Select Date and Time:</label>
          <input type="datetime-local" class="form-control" id="scheduleDate">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary" id="saveSchedule">Save Schedule</button>
        </div>
      </div>
    </div>
  </div>
  <br>
  <br>
  <!-- JS for Sidebar, Formatting, Image Preview, and Modal -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Sidebar toggle and track active section
    let activeSection = '';
  
    document.querySelectorAll('.plus-button').forEach(button => {
      button.addEventListener('click', (event) => {
        activeSection = event.target.id === 'titlePlus' ? 'title' : 'article';
        document.getElementById('sidebar').classList.toggle('active');
      });
    });
  
    // Close sidebar
    document.querySelector('.close-sidebar').addEventListener('click', () => {
      document.getElementById('sidebar').classList.remove('active');
    });
  
    // Text Formatting Buttons
    document.getElementById('boldBtn').addEventListener('click', () => {
      document.execCommand('bold');
    });
  
    document.getElementById('italicBtn').addEventListener('click', () => {
      document.execCommand('italic');
    });
  
    document.getElementById('addLinkBtn').addEventListener('click', () => {
      const selectedText = window.getSelection().toString();
      if (selectedText) {
        const url = prompt('Enter the URL:');
        if (url) {
          document.execCommand('createLink', false, url);
        }
      } else {
        alert('Please select the text you want to hyperlink.');
      }
    });
  
    document.getElementById('normalBtn').addEventListener('click', () => {
      document.execCommand('removeFormat');
    });
  
    // Image Preview Functionality with Limit
    document.getElementById('imageUpload').addEventListener('change', (event) => {
      const file = event.target.files[0];
      const imgPreview = document.getElementById('imagePreview');
  
      if (imgPreview.childElementCount > 0) {
        alert("You can only upload one image. Please delete the existing one to upload a new image.");
        return;
      }
  
      if (file) {
        const reader = new FileReader();
        reader.onload = (e) => {
          const imageContainer = document.createElement('div');
          imageContainer.className = 'image-preview';
          imageContainer.innerHTML = `
            <img src="${e.target.result}" alt="Uploaded Image" />
            <button class="delete-image">X</button>
          `;
          imgPreview.appendChild(imageContainer);
  
          // Delete image
          imageContainer.querySelector('.delete-image').addEventListener('click', () => {
            imgPreview.removeChild(imageContainer);
            event.target.value=""
          });
        };
        reader.readAsDataURL(file);
      }
    });
  
    // Validate Article Content
    function validateArticle() {
      const title = document.getElementById('titleInput').value.trim();
      const article = document.getElementById('articleInput').innerText.trim();
      return title !== '' && article !== '';
    }
  
    // Handle Publish or Schedule
    function handlePublishOrSchedule(isSchedule = false) {
      if (!validateArticle()) {
        alert('Please fill in the title and article content before proceeding.');
        return;
      }
  
      const title = document.getElementById('titleInput').value;
      const article = document.getElementById("articleInput").innerHTML;
      const category = document.getElementById('categorySelect').value;
      const images = Array.from(document.querySelectorAll(".image-preview img")).map(img => img.src);
      const data = { title, article, category, images };
  
      // Add schedule date if scheduling
      if (isSchedule) {
        const date = document.getElementById('scheduleDate').value;
        if (!date) {
          alert('Please select a valid date and time.');
          return;
        }
        data.schedule = date;
      }
  
      fetch('/publish-article', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })
        .then(response => response.json())
        .then(result => {
          console.log('Success:', result);
          alert(isSchedule ? 'Article Scheduled!' : 'Article Published!');
          // Redirect after successful operation if needed
          // window.location.href = 'dashboard.html';
        })
        .catch(error => {
          console.error('Error:', error);
          alert('There was an error processing your request.');
        });
    }
  
    // Schedule button
    document.getElementById('scheduleBtn').addEventListener('click', () => {
      if (validateArticle()) {
        const scheduleModal = new bootstrap.Modal(document.getElementById('scheduleModal'));
        scheduleModal.show();
      } else {
        alert('Please fill in the title and article content before scheduling.');
      }
    });
  
    // Save Schedule button in Modal
    document.getElementById('saveSchedule').addEventListener('click', () => {
      handlePublishOrSchedule(true);
      const scheduleModal = bootstrap.Modal.getInstance(document.getElementById('scheduleModal'));
      scheduleModal.hide();
    });
  
    // Publish button
    document.getElementById('publishBtn').addEventListener('click', () => {
      handlePublishOrSchedule(false);
    });
  </script>
  
  <!-- <script>
    // Sidebar toggle and track active section
    let activeSection = '';

    document.querySelectorAll('.plus-button').forEach(button => {
      button.addEventListener('click', (event) => {
        activeSection = event.target.id === 'titlePlus' ? 'title' : 'article';
        document.getElementById('sidebar').classList.toggle('active');
      });
    });

    // Close sidebar
    document.querySelector('.close-sidebar').addEventListener('click', () => {
      document.getElementById('sidebar').classList.remove('active');
    });

    // Bold Button functionality
    document.getElementById('boldBtn').addEventListener('click', () => {
      document.execCommand('bold', false, null);
    });

    // Italic Button functionality
    document.getElementById('italicBtn').addEventListener('click', () => {
      document.execCommand('italic', false, null);
    });

    // Hyperlink Button functionality
    document.getElementById('addLinkBtn').addEventListener('click', () => {
      const selectedText = window.getSelection().toString();
      if (selectedText) {
        const url = prompt('Enter the URL:');
        if (url) {
          document.execCommand('createLink', false, url);
        }
      } else {
        alert('Please select the text you want to hyperlink.');
      }
    });

    // Normal Button functionality
    document.getElementById('normalBtn').addEventListener('click', () => {
      document.execCommand('removeFormat', false, null);
    });

     // Image Preview Functionality with Limit
  document.getElementById('imageUpload').addEventListener('change', (event) => {
    const file = event.target.files[0];
    const imgPreview = document.getElementById('imagePreview');
    if (imgPreview.childElementCount > 0) {
      alert("You can only upload one image. Please delete the existing one to upload a new image.");
      return;
    }
    
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        const imageContainer = document.createElement('div');
        imageContainer.className = 'image-preview';
        imageContainer.innerHTML = `
          <img src="${e.target.result}" alt="Uploaded Image" />
          <button class="delete-image">X</button>
        `;
        imgPreview.appendChild(imageContainer);

        // Add event listener for delete button
        imageContainer.querySelector('.delete-image').addEventListener('click', () => {
          imgPreview.removeChild(imageContainer);
        });
      };
      reader.readAsDataURL(file);
    }
  });

    // Handle Schedule and Publish
    function validateArticle() {
      const title = document.getElementById('titleInput').value.trim();
      const article = document.getElementById('articleInput').innerText.trim();
      return title !== '' && article !== '';
    }

    document.getElementById('scheduleBtn').addEventListener('click', () => {
      if (validateArticle()) {
        const scheduleModal = new bootstrap.Modal(document.getElementById('scheduleModal'));
        scheduleModal.show();
      } else {
        alert('Please fill in the title and article content before scheduling.');
      }
    });

    document.getElementById('publishBtn').addEventListener('click', () => {
      if (validateArticle()) {
        const category = document.getElementById('categorySelect').value;

        alert(`Article Published under ${category}!`);
      } else {
        alert('Please fill in the title and article content before publishing.');
      }
    });

    document.getElementById('saveSchedule').addEventListener('click', () => {
      const date = document.getElementById('scheduleDate').value;
      if (date && validateArticle()) {
        alert(`Article scheduled for ${new Date(date).toLocaleString()}`);
        const scheduleModal = bootstrap.Modal.getInstance(document.getElementById('scheduleModal'));
        scheduleModal.hide();
      } else {
        alert('Please select a valid date and time.');
      }
    });
    function validateArticle() {
      const title = document.getElementById('titleInput').value.trim();
      const article = document.getElementById('articleInput').innerText.trim();
      return title !== '' && article !== '';
    }

    document.getElementById('scheduleBtn').addEventListener('click', () => {
      if (validateArticle()) {
        const scheduleModal = new bootstrap.Modal(document.getElementById('scheduleModal'));
        scheduleModal.show();
      } else {
        alert('Please fill in the title and article content before scheduling.');
      }
    });

    document.getElementById('publishBtn').addEventListener('click', () => {
      if (validateArticle()) {
        const category = document.getElementById('categorySelect').value;
        const title = document.getElementById('titleInput').value
        const article = document.getElementById("articleInput").innerHTML
        const images = document.querySelectorAll(".image-preview")
        console.log(images)
        const urls = []
        for (i of images) {
          urls.push(i.childNodes[1].src)
        }
        const data = { title: title, article: article, category: category, images: urls }

        fetch('/publish-article', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        })
          .then(response => response.json())
          .then(result => {

            console.log('Success:', result);
          })
          .catch(error => {
            console.error('Error:', error);
          });
        console.log(data)
       
        // Redirect to dashboard.html after publishing

      } else {
        alert('Please fill in the title and article content before publishing.');
      }
    });

    document.getElementById('saveSchedule').addEventListener('click', () => {
      const date = document.getElementById('scheduleDate').value;
      if (date && validateArticle()) {
        const category = document.getElementById('categorySelect').value;
        const title = document.getElementById('titleInput').value
        const article = document.getElementById("articleInput").innerHTML
        const images = document.querySelectorAll(".image-preview")
        console.log(images)
        const urls = []
        for (i of images) {
          urls.push(i.childNodes[1].src)
        }
        const data = { schedule:date,title: title, article: article, category: category, images: urls }

        fetch('/publish-article', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        })
          .then(response => response.json())
          .then(result => {

            console.log('Success:', result);
          })
          .catch(error => {
            console.error('Error:', error);
          });
        console.log(data)
        
        const scheduleModal = bootstrap.Modal.getInstance(document.getElementById('scheduleModal'));
        scheduleModal.hide();
        // Redirect to dashboard.html after scheduling
       
      } else {
        alert('Please select a valid date and time.');
      }
    });
  </script> -->
</body>

</html>
